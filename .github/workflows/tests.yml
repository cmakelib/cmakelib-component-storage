name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'
  workflow_dispatch:

jobs:
  test_linux:
    strategy:
      matrix:
        image: ["latest-debian-buster", "latest-debian-bullseye", "latest-ubuntu-2004", "latest-ubuntu-2204" ]
        cmdopt: [ "-P ./CMakeLists.txt", "." ]
    runs-on: ubuntu-latest
    container:
        image: koudis/cmakelib-build-linux:${{ matrix.image }}
    steps:
      - uses: actions/checkout@v2
      - name: Init CMakelib
        run: |
            git clone "https://github.com/cmakelib/cmakelib.git"
            echo "CMLIB_DIR=$(pwd)/cmakelib" >> $GITHUB_ENV
      - name: Run tests
        run: |
            cd test/ && cmake ${{ matrix.cmdopt }}

  test_windows:
    strategy:
      matrix:
        cmdopt: [ "-P ./CMakeLists.txt", "." ]
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Init CMakelib
        run: |
            git clone "https://github.com/cmakelib/cmakelib.git"
      - name: Run tests
        run: |
            $Env:CMLIB_DIR=$(Join-Path -Path $(Get-Location).Path -ChildPath "cmakelib")
            $Env:CMLIB_DIR
            cd test/
            cmake ${{ matrix.cmdopt }}

  test_macos:
    strategy:
      matrix:
        cmdopt: [ "-P ./CMakeLists.txt", "." ]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Init CMakelib
        run: |
            git clone "https://github.com/cmakelib/cmakelib.git"
            echo "CMLIB_DIR=$(pwd)/cmakelib" >> $GITHUB_ENV
      - name: Run tests
        run: |
            cd test/ && cmake ${{ matrix.cmdopt }}
